// <auto-generated />
using System;
using GamaEdtech.Infrastructure.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace GamaEdtech.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250720173644_add SchoolId to user")]
    partial class addSchoolIdtouser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamaEdtech.Common.DataAccess.Audit.Audit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Date");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("IpAddress");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UserAgent");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("GamaEdtech.Common.DataAccess.Audit.AuditEntry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("Id");

                    b.Property<string>("AuditId")
                        .IsRequired()
                        .HasColumnType("char(26)")
                        .HasColumnName("AuditId");

                    b.Property<byte>("AuditType")
                        .HasColumnType("tinyint")
                        .HasColumnName("AuditType");

                    b.Property<int>("EntityType")
                        .HasColumnType("int")
                        .HasColumnName("EntityType");

                    b.Property<string>("IdentifierId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("IdentifierId");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("AuditEntries");
                });

            modelBuilder.Entity("GamaEdtech.Common.DataAccess.Audit.AuditEntryProperty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("Id");

                    b.Property<string>("AuditEntryId")
                        .IsRequired()
                        .HasColumnType("char(26)")
                        .HasColumnName("AuditEntryId");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NewValue");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OldValue");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("PropertyName");

                    b.HasKey("Id");

                    b.HasIndex("AuditEntryId");

                    b.ToTable("AuditEntryProperties");
                });

            modelBuilder.Entity("GamaEdtech.Common.Identity.DataProtection.DataProtectionKey", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(26)")
                        .HasColumnName("Id");

                    b.Property<string>("FriendlyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("FriendlyName");

                    b.Property<string>("Xml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Xml");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.ApplicationSettings", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.ToTable("ApplicationSettings");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Description");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("FullName");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("IsRead");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Subject");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Contribution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("CategoryType")
                        .HasColumnType("tinyint")
                        .HasColumnName("CategoryType");

                    b.Property<string>("Comment")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Comment");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Data");

                    b.Property<long?>("IdentifierId")
                        .HasColumnType("bigint")
                        .HasColumnName("IdentifierId");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.HasIndex("Status");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardId")
                        .HasColumnType("int")
                        .HasColumnName("BoardId");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Description");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NormalizedName");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("IX_ApplicationRole_NormalizedName")
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("ApplicationRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "85465B3B-E646-49BC-AAC6-D07C450B3AE3",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "85465B3B-E646-49BC-AAC6-D07C450B3AE4",
                            Name = "Teacher",
                            NormalizedName = "TEACHER"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "85465B3B-E646-49BC-AAC6-D07C450B3AE5",
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar")
                        .HasColumnName("ClaimType");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ClaimValue");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("ApplicationRoleClaims");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int")
                        .HasColumnName("AccessFailedCount");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Avatar");

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("EmailConfirmed");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("Enabled");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LastName");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NormalizedEmail");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NormalizedUserName");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("PhoneNumberConfirmed");

                    b.Property<DateTimeOffset?>("RegistrationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("RegistrationDate");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolId");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("IX_ApplicationUser_NormalizedEmail");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("IX_ApplicationUser_NormalizedUserName")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("ApplicationUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5BABA139-4AE5-4C47-BC65-DE4849346A17",
                            Email = "admin@gamaedtech.com",
                            EmailConfirmed = true,
                            Enabled = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GAMAEDTECH.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEMLN3xqYWUja6ShSK0teeCYzziU6b+KghL4AiSXrb03Y3VbBfxKP7LUF3PZAJhQJ+Q==",
                            PhoneNumber = "09355028981",
                            PhoneNumberConfirmed = true,
                            RegistrationDate = new DateTimeOffset(new DateTime(2023, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SchoolId = 0,
                            SecurityStamp = "EAF1FA85-3DA1-4A40-90C6-65B97BF903F1",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar")
                        .HasColumnName("ClaimType");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ClaimValue");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_ApplicationUserClaim_UserId");

                    b.ToTable("ApplicationUserClaims");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LoginProvider");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ProviderKey");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ProviderDisplayName");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_ApplicationUserLogin_UserId");

                    b.ToTable("ApplicationUserLogins");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("IX_ApplicationUserRole_RoleId");

                    b.ToTable("ApplicationUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LoginProvider");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<string>("Value")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("ApplicationUserTokens");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Code");

                    b.Property<Point>("Coordinates")
                        .HasColumnType("geography")
                        .HasColumnName("Coordinates");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<string>("LocalTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LocalTitle");

                    b.Property<byte>("LocationType")
                        .HasColumnType("tinyint")
                        .HasColumnName("Type");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.HasIndex("LocationType");

                    b.HasIndex("ParentId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<int>("DislikeCount")
                        .HasColumnType("int")
                        .HasColumnName("DislikeCount");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("ImageId");

                    b.Property<string>("Keywords")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Keywords");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int")
                        .HasColumnName("LikeCount");

                    b.Property<DateTimeOffset>("PublishDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("PublishDate");

                    b.Property<string>("Slug")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Slug");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Title");

                    b.Property<byte>("VisibilityType")
                        .HasColumnType("tinyint")
                        .HasColumnName("VisibilityType");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.PostTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint")
                        .HasColumnName("PostId");

                    b.Property<long>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnName("TagId");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("TagId");

                    b.HasIndex("PostId", "TagId")
                        .IsUnique();

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Reaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("CategoryType")
                        .HasColumnType("tinyint")
                        .HasColumnName("CategoryType");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<long>("IdentifierId")
                        .HasColumnType("bigint")
                        .HasColumnName("IdentifierId");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit")
                        .HasColumnName("IsLike");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("CategoryType", "IdentifierId", "CreationUserId")
                        .IsUnique();

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Address");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityId");

                    b.Property<Point>("Coordinates")
                        .HasColumnType("geography")
                        .HasColumnName("Coordinates");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<long?>("DefaultImageId")
                        .HasColumnType("bigint")
                        .HasColumnName("DefaultImageId");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Email");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("FaxNumber");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<string>("LocalAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LocalAddress");

                    b.Property<string>("LocalName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LocalName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<long?>("OsmId")
                        .HasColumnType("bigint")
                        .HasColumnName("OsmId");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("Quarter")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Quarter");

                    b.Property<byte?>("SchoolType")
                        .HasColumnType("tinyint")
                        .HasColumnName("SchoolType");

                    b.Property<double?>("Score")
                        .HasColumnType("float")
                        .HasColumnName("Score");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId");

                    b.Property<string>("WebSite")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar")
                        .HasColumnName("WebSite");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("DefaultImageId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModifyUserId");

                    b.HasIndex("Score")
                        .IsDescending();

                    b.HasIndex("StateId");

                    b.HasIndex("LastModifyDate", "CreationDate")
                        .IsDescending();

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.SchoolComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("ArtisticActivitiesRate")
                        .HasColumnType("float")
                        .HasColumnName("ArtisticActivitiesRate");

                    b.Property<decimal>("AverageRate")
                        .HasPrecision(3, 2)
                        .HasColumnType("numeric")
                        .HasColumnName("AverageRate");

                    b.Property<double>("BehaviorRate")
                        .HasColumnType("float")
                        .HasColumnName("BehaviorRate");

                    b.Property<double>("ClassesQualityRate")
                        .HasColumnType("float")
                        .HasColumnName("ClassesQualityRate");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<int>("DislikeCount")
                        .HasColumnType("int")
                        .HasColumnName("DislikeCount");

                    b.Property<double>("EducationRate")
                        .HasColumnType("float")
                        .HasColumnName("EducationRate");

                    b.Property<double>("FacilitiesRate")
                        .HasColumnType("float")
                        .HasColumnName("FacilitiesRate");

                    b.Property<double>("ITTrainingRate")
                        .HasColumnType("float")
                        .HasColumnName("ITTrainingRate");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int")
                        .HasColumnName("LikeCount");

                    b.Property<double>("SafetyAndHappinessRate")
                        .HasColumnType("float")
                        .HasColumnName("SafetyAndHappinessRate");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint")
                        .HasColumnName("SchoolId");

                    b.Property<double>("TuitionRatioRate")
                        .HasColumnType("float")
                        .HasColumnName("TuitionRatioRate");

                    b.HasKey("Id");

                    b.HasIndex("LastModifyUserId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("CreationUserId", "SchoolId")
                        .IsUnique();

                    b.ToTable("SchoolComments");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.SchoolImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ContributionId")
                        .HasColumnType("bigint")
                        .HasColumnName("ContributionId");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("FileId");

                    b.Property<byte>("FileType")
                        .HasColumnType("tinyint")
                        .HasColumnName("FileType");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint")
                        .HasColumnName("SchoolId");

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnName("TagId");

                    b.HasKey("Id");

                    b.HasIndex("ContributionId");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("TagId");

                    b.ToTable("SchoolImages");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.SchoolTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint")
                        .HasColumnName("SchoolId");

                    b.Property<long>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnName("TagId");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("TagId");

                    b.HasIndex("SchoolId", "TagId")
                        .IsUnique();

                    b.ToTable("SchoolTags");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<byte>("TagType")
                        .HasColumnType("tinyint")
                        .HasColumnName("TagType");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.HasIndex("TagType");

                    b.HasIndex("TagType", "Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreationUserId");

                    b.Property<DateTimeOffset?>("LastModifyDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastModifyDate");

                    b.Property<int?>("LastModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("LastModifyUserId");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CreationUserId");

                    b.HasIndex("LastModifyUserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<int>("CurrentBalance")
                        .HasColumnType("int")
                        .HasColumnName("CurrentBalance");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Description");

                    b.Property<long?>("IdentifierId")
                        .HasColumnType("bigint")
                        .HasColumnName("IdentifierId");

                    b.Property<bool>("IsDebit")
                        .HasColumnType("bit")
                        .HasColumnName("IsDebit");

                    b.Property<int>("Points")
                        .HasColumnType("int")
                        .HasColumnName("Points");

                    b.Property<long?>("PreviousTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("PreviousTransactionId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PreviousTransactionId")
                        .IsUnique()
                        .HasFilter("[PreviousTransactionId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.VotingPower", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(36, 18)
                        .HasColumnType("numeric")
                        .HasColumnName("Amount");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("CreationDate");

                    b.Property<string>("ProposalId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ProposalId");

                    b.Property<string>("TokenAccount")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar")
                        .HasColumnName("TokenAccount");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar")
                        .HasColumnName("WalletAddress");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.HasIndex("WalletAddress");

                    b.ToTable("VotingPowers");
                });

            modelBuilder.Entity("SubjectGrades", b =>
                {
                    b.Property<int>("GradesId")
                        .HasColumnType("int")
                        .HasColumnName("GradeId");

                    b.Property<int>("SubjectsId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.HasKey("GradesId", "SubjectsId");

                    b.HasIndex("SubjectsId");

                    b.ToTable("SubjectGrades");
                });

            modelBuilder.Entity("SubjectTopics", b =>
                {
                    b.Property<int>("SubjectsId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.Property<int>("TopicsId")
                        .HasColumnType("int")
                        .HasColumnName("TopicId");

                    b.HasKey("SubjectsId", "TopicsId");

                    b.HasIndex("TopicsId");

                    b.ToTable("SubjectTopics");
                });

            modelBuilder.Entity("GamaEdtech.Common.DataAccess.Audit.AuditEntry", b =>
                {
                    b.HasOne("GamaEdtech.Common.DataAccess.Audit.Audit", "Audit")
                        .WithMany("AuditEntries")
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("GamaEdtech.Common.DataAccess.Audit.AuditEntryProperty", b =>
                {
                    b.HasOne("GamaEdtech.Common.DataAccess.Audit.AuditEntry", "AuditEntry")
                        .WithMany("AuditEntryProperties")
                        .HasForeignKey("AuditEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditEntry");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.ApplicationSettings", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Board", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Contribution", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Grade", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Board", "Board")
                        .WithMany()
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Board");

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationRoleClaim", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationRole", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserClaim", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserLogin", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserRole", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUserToken", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Location", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GamaEdtech.Domain.Entity.Location", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Post", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.PostTag", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreationUser");

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Question", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsMany("GamaEdtech.Domain.Entity.QuestionOption", "Options", b1 =>
                        {
                            b1.Property<long>("QuestionId")
                                .HasColumnType("bigint");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Body")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Index")
                                .HasColumnType("int");

                            b1.Property<bool>("IsCorrect")
                                .HasColumnType("bit");

                            b1.HasKey("QuestionId", "__synthesizedOrdinal");

                            b1.ToTable("Questions");

                            b1.ToJson("Options");

                            b1.WithOwner()
                                .HasForeignKey("QuestionId");
                        });

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Reaction", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreationUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.School", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Location", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GamaEdtech.Domain.Entity.Location", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.SchoolImage", "DefaultImage")
                        .WithMany()
                        .HasForeignKey("DefaultImageId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GamaEdtech.Domain.Entity.Location", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("CreationUser");

                    b.Navigation("DefaultImage");

                    b.Navigation("LastModifyUser");

                    b.Navigation("State");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.SchoolComment", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GamaEdtech.Domain.Entity.School", "School")
                        .WithMany("SchoolComments")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");

                    b.Navigation("School");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.SchoolImage", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Contribution", "Contribution")
                        .WithMany()
                        .HasForeignKey("ContributionId");

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GamaEdtech.Domain.Entity.School", "School")
                        .WithMany("SchoolImages")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Contribution");

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");

                    b.Navigation("School");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.SchoolTag", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.School", "School")
                        .WithMany("SchoolTags")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreationUser");

                    b.Navigation("School");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Subject", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Tag", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Topic", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "CreationUser")
                        .WithMany()
                        .HasForeignKey("CreationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "LastModifyUser")
                        .WithMany()
                        .HasForeignKey("LastModifyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreationUser");

                    b.Navigation("LastModifyUser");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Transaction", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Transaction", "PreviousTransaction")
                        .WithMany()
                        .HasForeignKey("PreviousTransactionId");

                    b.HasOne("GamaEdtech.Domain.Entity.Identity.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviousTransaction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SubjectGrades", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Grade", null)
                        .WithMany()
                        .HasForeignKey("GradesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubjectTopics", b =>
                {
                    b.HasOne("GamaEdtech.Domain.Entity.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Domain.Entity.Topic", null)
                        .WithMany()
                        .HasForeignKey("TopicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamaEdtech.Common.DataAccess.Audit.Audit", b =>
                {
                    b.Navigation("AuditEntries");
                });

            modelBuilder.Entity("GamaEdtech.Common.DataAccess.Audit.AuditEntry", b =>
                {
                    b.Navigation("AuditEntryProperties");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationRole", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Identity.ApplicationUser", b =>
                {
                    b.Navigation("UserClaims");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.Post", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("GamaEdtech.Domain.Entity.School", b =>
                {
                    b.Navigation("SchoolComments");

                    b.Navigation("SchoolImages");

                    b.Navigation("SchoolTags");
                });
#pragma warning restore 612, 618
        }
    }
}
